{"mappings":"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","sources":["script.js"],"sourcesContent":["// Initializing functions/methods\n\nconst mapEl = document.querySelector(\"#map\");\nconst formEl = document.querySelector(\".form\");\nconst cadenceLabel = document.querySelector(\".cadence-label\");\nconst inputType = document.querySelector(\".form-input-type\");\nconst inputCadence = document.querySelector(\".form-cadence\");\nconst inputDistance = document.querySelector(\".form-distance\");\nconst inputElevation = document.querySelector(\".input-elevation\");\nconst elevationEl = document.querySelector(\".form-elevation\");\nconst inputDuration = document.querySelector(\".form-duration\");\nconst workoutContainer = document.querySelector(\".workout\");\n\n// Classes\n\nconst workouts = [];\nclass App {\n  constructor() {}\n}\n\nconst app = new App();\n\nclass Workout {\n  date = new Intl.DateTimeFormat(\"pt-BR\", {\n    weekday: \"long\",\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n  }).format(new Date());\n  id = (Date.now() + \"\").slice(-10);\n  constructor(coords, duration, distance) {\n    this.coords = coords;\n    this.duration = duration;\n    this.distance = distance;\n  }\n}\n\nclass Running extends Workout {\n  type = \"running\";\n  constructor(coords, duration, distance, cadence) {\n    super(coords, duration, distance);\n    this.cadence = cadence;\n    this.calcPace()\n  }\n  calcPace() {\n    this.pace = this.duration / this.distance;\n  }\n}\n\nclass Cycling extends Workout {\n  type = \"cycling\";\n  constructor(coords, duration, distance, elevationGain) {\n    super(coords, duration, distance);\n    this.elevationGain = elevationGain;\n    this.calcSpeed()\n  }\n  calcSpeed() {\n    this.speed = this.distance/this.duration\n  }\n}\n\n\ninputType.addEventListener(\"change\", () => {\n  cadenceLabel.classList.toggle(\"hidden\");\n  elevationEl.classList.toggle(\"hidden\");\n});\n\nconst getPosition = function () {\n  return new Promise((resolve, reject) => {\n    navigator.geolocation.getCurrentPosition(resolve, reject);\n  });\n};\n\nlet map, marker, mapEvent;\n\nconst loadWorkouts = function () {\n  workoutContainer.innerHTML = \"\"\n  let workoutsLocal = JSON.parse(localStorage.getItem(\"workouts\")) || [];\n  for (const workout of workoutsLocal) {\n    let html = `\n    <div class=\"workout-inner-container ${workout.type}-workout-color\">\n    <div class=\"workout-message\">${\n      workout.type === \"running\" ? \"Corrida\" : \"Pedalada\"\n    } | ${workout.date}</div>\n    <div class=\"workout-stats\">\n      <div class=\"distance-stat\">\n        <span>${workout.type === \"running\" ? \"üèÉ\" : \"üö¥\"} ${\n      workout.distance\n    }<span>km</span> </span>\n      </div>\n      <div class=\"duration-stat\">\n        <span>‚è∞ ${workout.duration}<span>min</span> </span>\n      </div>\n  `;\n\n    if (workout.type === \"running\") {\n      html += `<div class=\"pace-stat\">\n    <span>‚ö° ${Math.round(workout.pace * 10) / 10} <span>min/km</span> </span>\n    </div>\n    <div class=\"cadence-stat\">\n    <span>ü¶∂ ${workout.cadence}<span>spm</span> </span>\n    </div>\n    </div>\n    </div>`;\n    }\n    if (workout.type === \"cycling\") {\n      html += `<div class=\"pace-stat\">\n    <span>‚ö° ${Math.round(workout.speed * 10) / 10} <span>km/h</span> </span>\n    </div>\n    <div class=\"cadence-stat\">\n    <span>‚õ∞Ô∏è ${workout.elevationGain}<span>m</span> </span>\n    </div>\n    </div>\n    </div>`;\n    }\n    workoutContainer.insertAdjacentHTML(\"afterbegin\", html);\n  }\n};\n\nloadWorkouts();\n\nconst addMarker = function (lat, lng, type) {\n  const marker = L.marker([lat, lng])\n    .addTo(map)\n    .bindPopup(\n      L.popup({\n        className: `marker--${type}`,\n        autoClose: false,\n        closeOnClick: false,\n      })\n    )\n    .setPopupContent(type === \"running\" ? \"üèÉ Corrida\" : \"üö¥ Pedalada\")\n    .openPopup();\n};\n\nconst loadMap = function () {\n  getPosition().then((res) => {\n    //Getting current user coords\n    const { latitude: lat, longitude: lng } = res.coords;\n\n    //Creating map\n    map = L.map(\"map\").setView([lat, lng], 13);\n    L.tileLayer(\"https://{s}.tile.openstreetmap.fr/osmfr/{z}/{x}/{y}.png\", {\n      maxZoom: 19,\n      attribution:\n        '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>',\n    }).addTo(map);\n\n    // Add marker to map\n    map.on(\"click\", (e) => {\n      mapEvent = e;\n      formEl.classList.remove(\"hidden\");\n      inputDuration.focus();\n    });\n\n    // Example: Add markers based on existing workout data\n    const workoutsLocal = JSON.parse(localStorage.getItem(\"workouts\")) || [];\n    workoutsLocal.forEach((workout) => {\n      const { coords, type } = workout;\n      const [clickLat, clickLng] = coords;\n      addMarker(clickLat, clickLng, type);\n    });\n\n    formEl.addEventListener(\"submit\", function (e) {\n      e.preventDefault();\n      const { lat: latitude, lng: longitude } = mapEvent.latlng;\n      createWorkout(latitude, longitude);\n      setLocalStorage();\n      loadWorkouts();\n      hideForm();\n    });\n  });\n};\n\n\n// Creating workouts objects\nconst createWorkout = function (clickLat, clickLng) {\n  if (inputType.value === \"running\") {\n    const running = new Running(\n      [clickLat, clickLng],\n      inputDuration.value,\n      inputDistance.value,\n      inputCadence.value\n    );\n    workouts.push(running);\n  }\n  if (inputType.value === \"cycling\") {\n    const cycling = new Cycling(\n      [clickLat, clickLng],\n      inputDuration.value,\n      inputDistance.value,\n      inputElevation.value\n    );\n    workouts.push(cycling);\n  }\n  addMarker(clickLat, clickLng, inputType.value);\n};\n\nconst showForm = function () {\n  formEl.classList.remove(\"hidden\");\n};\n\nconst hideForm = function () {\n  formEl.classList.add(\"hidden\");\n};\n\nconst setLocalStorage = function () {\n  const newWorkouts = workouts.slice(-1);\n  const existingWorkouts = JSON.parse(localStorage.getItem(\"workouts\")) || [];\n  console.log(...workouts);\n  existingWorkouts.length = 0;\n  existingWorkouts.push(...workouts);\n  localStorage.setItem(\"workouts\", JSON.stringify(existingWorkouts));\n  \n};\n\nloadMap();\n"],"names":[],"version":3,"file":"index.672d4772.js.map","sourceRoot":"/__parcel_source_root/"}